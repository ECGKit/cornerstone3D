import { Types, utilities as csUtils } from '@cornerstonejs/core';
import { InterpolationROIAnnotation } from '../../../types/ToolSpecificAnnotationTypes';

export default function createInterpolatedToolData(
  eventData,
  points,
  referencedToolData
) {
  const annotation: InterpolationROIAnnotation =
    structuredClone(referencedToolData);
  Object.assign(annotation, {
    highlighted: false,
    invalidated: true,
    autoGenerated: true,
    annotationUID: undefined,
    cachedStats: {},
  });
  Object.assign(annotation.data, {
    handles: {
      points: [],
      activeHandleIndex: null,
      textBox: {
        hasMoved: false,
        worldPosition: <Types.Point3>[0, 0, 0],
        worldBoundingBox: {
          topLeft: <Types.Point3>[0, 0, 0],
          topRight: <Types.Point3>[0, 0, 0],
          bottomLeft: <Types.Point3>[0, 0, 0],
          bottomRight: <Types.Point3>[0, 0, 0],
        },
      },
    },
    contour: {
      polyline: [],
      closed: true,
    },
  });
  annotation.metadata.referencedImageId = undefined;
  annotation.metadata.referencedSliceIndex = undefined;

  const { polyline } = annotation.data.contour;
  for (let i = 0; i < points.length; i++) {
    polyline.push([points[i][0], points[i][1], points[i][2]]);
  }
  return annotation;
}
